openapi: 3.0.0
info:
  title: price-drop-alerter
  description: Node service that determines if a price drop alert needs to be triggered
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /liveness:
    get:
      description: Returns the readiness of the service
      operationId: liveness
      x-eov-operation-id: liveness
      x-eov-operation-handler: healthcheck
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthCheckResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /price-drop-check:
    post:
      description: endpoint to post updated prices for particular product
      operationId: priceDropCheck
      x-eov-operation-id: priceDropCheck
      x-eov-operation-handler: price-drop-check
      requestBody:
        description: price drop check request schema
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/priceDropCheckRequestBody"
      responses:
        "200":
          description: "Response indicating whether a price drop alert is required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/priceDropCheckResponse"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
components:
  responses:
    "401":
      description: Unauthorised Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorisedError"
    "404":
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundError"
    "500":
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"
    default:
      description: Invalid Request Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidRequestError"
  schemas:
    priceDropCheckResponse:
      description: Response indicating whether a price drop alert is required
      type: object
      properties:
        alertRequired:
          type: boolean
        newPrice:
          type: number
        productId:
          type: string
        retailerId:
          type: string
      additionalProperties: false
    priceDropCheckRequestBody:
      description: Request body to check whether a price drop alert is required
      type: object
      required:
        - productId
        - retailers
      properties:
        productId:
          type: string
          example: "ABC123"
        retailers:
          type: array
          items:
            type: object
            properties:
              retailerId:
                type: string
                example: "nike"
              retailPrice:
                type: number
                example: 100
              isInStock:
                type: boolean
              discountedPrice:
                type: number
                example: 90
            required:
              - retailerId
              - retailPrice
              - isInStock
    healthCheckResponse:
      description: healthcheck OK response
      type: object
      properties:
        message:
          type: string
          enum:
            - OK
    NotFoundError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    UnauthorisedError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InvalidRequestError:
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InternalServerError:
      title: Internal Server Error
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
